#!/bin/bash
# embedded options to bsub - start with #BSUB
# -- our name ---
#BSUB -J TransformersGPUTest
# -- choose GPU queue --

#BSUB -q gpua100
# -- request GPU resources --
#BSUB -gpu "num=1:mode=exclusive_process"
# -- specify that we need memory per core/slot --
#BSUB -R "rusage[mem=6GB]"
# -- Notify me by email when execution begins --
#BSUB -B
# -- Notify me by email when execution ends   --
#BSUB -N
# -- email address --
#BSUB -u s233185@dtu.dk
# -- Output File --
#BSUB -o Output_transformers_%J.out
#BSUB -e Output_transformers_%J.err
# -- estimated wall clock time (execution time): hh:mm --
#BSUB -W 00:30
# -- Number of cores requested --
#BSUB -n 4
# -- Specify the distribution of the cores: on a single node --
#BSUB -R "span[hosts=1]"
# -- end of LSF options --

# --- Setup ---
echo "Starting job: $LSB_JOBID on host: $(hostname)"
echo "Current directory: $(pwd)"

# Load necessary modules
module load python3
module load cuda/12.8  # Based on your nvidia-smi output showing CUDA 12.8

# --- Install Python Libraries ---
echo "Installing Python libraries..."
pip3 install --user transformers torch torchvision torchaudio accelerate bitsandbytes
INSTALL_STATUS=$?
if [ $INSTALL_STATUS -ne 0 ]; then
    echo "Error: Failed to install Python libraries. Exit status: $INSTALL_STATUS"
    echo "Check Output_transformers_%J.err for details."
    exit 1
fi
echo "Library installation complete."

# Add user-installed packages to PATH and PYTHONPATH
export PATH="$HOME/.local/bin:$PATH"
export PYTHONPATH="$HOME/.local/lib/python$(python3 -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')/site-packages:$PYTHONPATH"
echo "Updated PATH and PYTHONPATH for user installs."

# Check GPU availability for diagnostics
echo "Checking for GPU availability:"
python3 -c "import torch; print('CUDA available:', torch.cuda.is_available()); print('Number of GPUs:', torch.cuda.device_count()); print('GPU device name:', torch.cuda.get_device_name(0) if torch.cuda.is_available() else 'No GPU')"

# --- Run Your Python Script ---
echo "Running Python script: test_transformers_connection.py"
python3 test_transformers_connection.py
PYTHON_EXIT_STATUS=$?

# --- Cleanup ---
echo "Job finished."

exit $PYTHON_EXIT_STATUS
